<%
  theme = %Theme{text_color: "blue"}
  [h2, h3, h4] = Theme.headings(theme)
%>
<%= render view_module(@conn), "_header.html" %>

<div class="text-base lg:text-lg flex items-stretch bg-gray-900">
  <nav class="w-48 lg:w-64 bg-gray-800 border-r border-gray-700 text-white">
    <div class="sticky top-0">
      <h2 class="pt-8 pl-4 italic">I want to make my element:</h2>
      <ul class="p-2 pl-8 leading-loose">
        <li><%= link "Hidden", to: "#hidden" %>
        <li><%= link "Current", to: "#current" %>
        <li><%= link "Selected", to: "#selected" %>
        <li><%= link "Invalid", to: "#invalid" %>
        <li><%= link "Required", to: "#required" %>
        <li><%= link "Disabled", to: "#disabled" %>
        <li><%= link("All Queries 🔗", to: "https://testing-library.com/docs/dom-testing-library/api-queries") %>
        <li><%= link("All Matchers 🔗", to: "https://github.com/testing-library/jest-dom") %>
      </ul>
    </div>
  </nav>
  <div class="mx-auto flex-shrink">
    <section aria-labelledby="primary-heading" class="prose md:prose-lg prose-invert max-w-xl lg:max-w-4xl px-6 pt-16 pb-16 text-white">
      <h1 id="primary-heading">Accessible Properties Cheatsheet</h1>

      <article aria-labelledby="hidden" class="space-y-4">
        <%= h2.(line("I want to **hide** an element"), id: "hidden") %>

        <p><%= line("When hiding content, first ask: to whom do I want to **show** the content?") %>

        <%= list [
          "Do we want to show it to *everyone*? 👂✅ 👁✅",
          "Do we want to hide it from *everyone*? 👂❌ 👁❌",
          "Do we want an *audible affordance*? 👂✅ 👁❌ — let screen reader users hear it, yet hide it from sighted users?",
          "Do we want a *visual affordance*? 👂❌ 👁✅ — let sighted users see it, yet hide it from screen reader users?"
        ] %>

        <section aria-labelledby="hidden-all-heading">
          <%= h3.("Hidden to everyone 👂❌ 👁❌", id: "hidden-all-heading") %>
          <p>To hide from everyone, add the <code>hidden</code> attribute.</p>
          <%= h4.("Test") %>
          <%=
          """
          it("is hidden", () => {
            expect(screen.queryByRole('link', { name: 'Profile' })).toBeNull();
          })
          """ |> code_block(:js)
          %>
          <%= h4.("Markup") %>
          <%=
          """
          <a href="/profile" hidden>Profile</a>
          """ |> code_block(:html)
          %>
          <%= h4.("Styling") %>
          <%=
          """
          [hidden] {
            display: none !important;
          }
          """ |> code_block(:css)
          %>
        </section>

        <section aria-labelledby="hidden-visually-heading">
          <%#= h3.("Visually hidden (assistive technology only)", id: "hidden-visually-heading") %>
          <%= h3.("Assistive technology affordance (visually hidden) 👂✅ 👁❌", id: "hidden-visually-heading") %>
          <p>To show to people using assistive technology such as screen readers, yet hide from visual users, define and use a <code>visually-hidden</code> class.</p>
          <%= h4.("Test") %>
          <%=
          """
          it("has text that can still be read by tests and by screen readers", () => {
            const link = screen.getByRole('link', { name: 'Profile' });
            expect(link).toBeInTheDocument();
          })
          """ |> code_block(:js)
          %>
          <%= h4.("Markup") %>
          <%=
          """
          <a href="/profile">
            <span class="icon-user"></span> <!-- e.g. 👤 -->
            <span class="visually-hidden">Profile</span>
          </a>
          """ |> code_block(:html)
          %>
          <%= h4.("Styling") %>
          <%=
          """
          .visually-hidden {
            position: absolute;
            overflow: hidden;
            clip: rect(0 0 0 0);
            width: 1px;
            height: 1px;
            margin: -1px;
            padding: 0;
            border: 0;
          }
          """ |> code_block(:css)
          %>
        </section>

        <section aria-labelledby="hidden-screen-heading">
          <%= h3.("Visual affordance (hidden to assistive technology) 👂❌ 👁✅", id: "hidden-screen-heading") %>
          <p>To show visually but hide to assistive technology, add the <code>aria-hidden</code> attribute.</p>
          <%= h4.("Test") %>
          <%=
          """
          it("does not include emoji in accessible name", () => {
            expect(
              screen.getByRole('link', { name: 'Profile' })
            ).toBeVisible();
          })
          """ |> code_block(:js)
          %>
          <%= h4.("Markup") %>
          <%=
          """
          <a href="/profile">
            <span aria-hidden=true>👤</span>
            Profile
          </a>
          """ |> code_block(:html)
          %>
        </section>

        <section aria-labelledby="hidden-notes-heading">
          <%= h3.("Notes", id: "hidden-notes-heading") %>
          <ul>
            <li><%= link("Scott O’Hara: Inclusively Hidden", to: "https://www.scottohara.me/blog/2017/04/14/inclusively-hidden.html") %>
            <li><%= link("Scott O’Hara: Know your ARIA: ‘Hidden’ vs ‘None’", to: "https://www.scottohara.me/blog/2018/05/05/hidden-vs-none.html") %>
            <li><%= link("MDN: Using the aria-hidden attribute", to: "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-hidden_attribute") %>
            <li><%= link("Places it’s tempting to use `display: none;`, but don’t ", to: "https://css-tricks.com/places-its-tempting-to-use-display-none-but-dont/") %>
          </ul>
        </section>
      </article>

      <hr>

      <article aria-labelledby="current" class="space-y-4">
        <%= h2.(line("I want to say this element is **current**"), id: "current") %>

        <section aria-labelledby="current-page-heading">
          <%= h3.("Current page", id: "current-page-heading") %>
          <p>Imagine a navigation bar full of links. If you visit one of these links, a popular pattern is to differentiate the current page’s link visually. For example, it might be underlined.</p>
          <p>To hide to everyone, add the <code>hidden</code> attribute.</p>
          <%= h4.("Test") %>
          <%=
          """
          it("is current page", () => {
            const link = screen.getByRole('link', { name: 'Pricing' });
            expect(link).toHaveAttribute('aria-current', 'page');
          })
          """ |> code_block(:js)
          %>
          <%= h4.("Markup") %>
          <%=
          """
          <a href="/features">Features</a>
          <a href="/pricing" aria-current=page>Pricing</a>
          <a href="/terms">Terms</a>
          """ |> code_block(:html)
          %>
          <%= h4.("Styling") %>
          <%=
          """
          a {
            border-bottom: 2px solid transparent;
          }
          a[aria-current=page] {
            border-bottom-color: pink;
          }
          """ |> code_block(:css)
          %>
        </section>

        <section aria-labelledby="current-notes-heading">
          <%= h3.("Notes", id: "current-notes-heading") %>
          <ul>
            <li><%= link("Marking elements as the current one using aria-current", to: "https://www.accessibility-developer-guide.com/examples/sensible-aria-usage/current/") %>
          </ul>
        </section>
      </article>

      <hr>

      <article aria-labelledby="selected" class="space-y-4">
        <%= h2.(line("I want to say this element is **selected**"), id: "selected") %>

        <ul>
          <li>Selected tab in a list
        </ul>
      </article>

      <hr>

      <article aria-labelledby="invalid" class="space-y-4">
        <%= h2.(line("I want to say this element is **invalid**"), id: "invalid") %>

        <section aria-labelledby="invalid-email-field-heading">
          <%= h3.("Invalid email field", id: "invalid-email-field-heading") %>
          <%= h4.("Test") %>
          <%=
          """
          it("is invalid", () => {
            const emailField = screen.getByRole('textbox', { name: 'Email' });
            expect(emailField).toBeInvalid();
          })

          it("shows error message", () => {
            const emailField = screen.getByRole('textbox', { name: 'Email' });
            expect(emailField).toHaveAccessibleDescription('Email must be a valid address');
          })
          """ |> code_block(:js)
          %>
          <%= h4.("Markup") %>
          <%=
          """
          <label for=email-field>Email</label>
          <input
            id=email-field
            type=email
            name=email
            aria-invalid
            aria-describedby=email-error
          >
          <p id=email-error>Email must be a valid address</p>
          """ |> code_block(:html)
          %>
        </section>
      </article>

      <hr>

      <article aria-labelledby="required" class="space-y-4">
        <%= h2.(line("I want to say this element is **required**"), id: "required") %>

        <section aria-labelledby="required-email-field-heading">
          <%= h3.("Required form field", id: "required-email-field-heading") %>
          <%= h4.("Test") %>
          <%=
          """
          it("is required", () => {
            const emailField = screen.getByRole('textbox', { name: 'Email' })
            expect(emailField).toBeRequired();
          })
          """ |> code_block(:js)
          %>
          <%= h4.("Markup") %>
          <%=
          """
          <label>
            Email
            <input type=email name=email required>
          </label>
          """ |> code_block(:html)
          %>
        </section>
      </article>

      <hr>

      <article aria-labelledby="disabled" class="space-y-4">
        <%= h2.(line("I want to **disable** an element"), id: "disabled") %>

        <section aria-labelledby="readonly-email-field-heading">
          <%= h3.("Read-only form field", id: "readonly-email-field-heading") %>
          <%= h4.("Test") %>
          <%=
          """
          it("is disabled", () => {
            const emailField = screen.getByRole('textbox', { name: 'Email' });
            expect(emailField).toBeDisabled();
          })
          """ |> code_block(:js)
          %>
          <%= h4.("Markup") %>
          <%=
          """
          <label>
            Email
            <input type=email name=email disabled>
          </label>
          """ |> code_block(:html)
          %>
        </section>
      </article>

    </section>
  </div>
</div>
